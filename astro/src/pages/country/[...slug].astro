---
import { useSanityClient } from '@sanity/astro';
import { ArticleTeaser, PageTitle, Section } from '../../components';
import { BaseLayout } from '../../layouts';
import { imageFragment } from '../../sanity/fragments';

export async function getStaticPaths() {
  const client = useSanityClient();
  const countries = await client.fetch<CountryWithPosts[]>(
    `*[_type == "country"] {
			_id,
      countryCode,
      name,
      "slug": slug.current,
      "posts": *[_type == "post" && references(^._id)]|order(publishedAt desc, _updatedAt desc)[] {
        _id,
        excerpt,
        title,
        ${imageFragment('mainImage')},
        "imageCount": math::sum(
          content[] {
            "count": 0,
            _type == "imageBlock" => {
              "count": 1,
            },
            _type in ["imageGalleryBlock", "inlineImagesBlock"] => {
              "count": length(images[]),
            },
          }.count
        ),
        // Assumes 5 characters as mean word length
        // https://ux.stackexchange.com/questions/22520/how-long-does-it-take-to-read-x-number-of-characters
        // Words per minute: 180
        "readingTime": round(
          length(pt::text(content[].content))
          / 5 / 180
        ),
        "slug": slug.current,
      },
		}`,
  );
  return countries.map((country) => ({
    params: { slug: country.slug },
    props: country,
  }));
}

type Props = CountryWithPosts;

const country = Astro.props;
---

<BaseLayout activeCountries={[country._id]}>
  <Section spacing="md">
    <div class="px-5 md:col-span-8 md:col-start-2 lg:col-start-3 md:px-0">
      <PageTitle className="mb-4 lg:mb-16">
        Posts in {country.name}
      </PageTitle>
      <div class="space-y-12">
        {country.posts.map((post) => <ArticleTeaser {...post} />)}
      </div>
    </div>
  </Section>
</BaseLayout>
