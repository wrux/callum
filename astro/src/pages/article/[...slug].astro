---
import { useSanityClient } from '@sanity/astro';
import { BaseLayout } from '../../layouts';
import { DateTime, PortableText, SanityImage, Section } from '../../components';
import { imageFragment } from '../../sanity/fragments';
import groq from 'groq';

export async function getStaticPaths() {
  const client = useSanityClient();
  const posts = await client.fetch<Article[]>(groq`
    *[_type == "post"] {
      _id,
      title,
      publishedAt,
      excerpt,
      content[] {
        ...,
        _type == "imageBlock" => {
          ${imageFragment('image')},
        },
        _type in ["imageGalleryBlock", "inlineImagesBlock"] => {
          images[] {
            _key,
            caption,
            ${imageFragment('image')},
          },
        },
      },
      "countries": countries[] -> {
        _id,
        countryCode,
        name,
        "slug": slug.current,
      },
      ${imageFragment('mainImage')},
      "slug": slug.current,
    }
  `);
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

type Props = Article;

const post = Astro.props;
---

<BaseLayout activeCountries={post.countries.map(({ _id }) => _id)}>
  <article>
    <Section spacing="none">
      <div class="md:col-span-6 md:px-0">
        {
          post.mainImage && (
            <figure transition:name={`article_image_${post._id}`}>
              <SanityImage
                image={post.mainImage}
                width="1280"
                transition:name={`article_cover_${post._id}`}
              />
              {post.mainImage?.alt && (
                <figcaption class="sr-only">{post.mainImage.alt}</figcaption>
              )}
            </figure>
          )
        }
      </div>
      <div class="md:col-span-6 py-8 md:px-8 lg:p-12 xl:p-16 space-y-6">
        <DateTime date={post.publishedAt} />
        <h2 class="text-5xl font-semibold mb-8">
          {post.title}
        </h2>
        {
          post?.excerpt && (
            <div
              class="prose-xl max-w-[40ch] dark:prose-invert"
              transition:name={`article_excerpt_${post._id}`}
            >
              <p>{post.excerpt}</p>
            </div>
          )
        }
      </div>
    </Section>

    <div class="mt-8 lg:mt-16">
      <PortableText value={post.content} />
    </div>
  </article>
</BaseLayout>
