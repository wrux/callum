---
import { imageBuilder } from '~/sanity/image';
import SanityPicture from 'astro-sanity-picture';
import { BaseLayout } from '~/layouts';
import { DateTime, Heading, PortableText, Text } from '~/components';
import { getPosts } from '~/sanity/queries';

export async function getStaticPaths() {
  const posts = await getPosts();
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

export type Props = Article;

const post = Astro.props as Article;
---

<BaseLayout
  meta={{
    title: `${post.title} | callum.co.uk`,
    description: post.excerpt,
    image:
      post.mainImage &&
      imageBuilder.image(post.mainImage).width(1600).height(900).url(),
  }}
>
  <article>
    <section class="mb-8 mb:mb-12 lg:mb-16">
      <div class="container">
        <div
          class="max-w-prose mx-auto text-center py-4 mb:pb-8 lg:pb-12 xl:pb-16"
        >
          {
            (post?.imageCount || post?.readingTime) && (
              <Text display="muted" size="sm" class:list="mb-2 lg:mb-4">
                {[
                  post?.readingTime && `${post.readingTime} minute read`,
                  post?.imageCount &&
                    `${post.imageCount} image${post.imageCount > 1 ? 's' : ''}`,
                ]
                  .filter(Boolean)
                  .join(' and ')}
              </Text>
            )
          }
          {
            post?.countries && (
              <Text class:list="flex gap-2 flex-wrap justify-center mb-4">
                <span class="sr-only">Countries: </span>
                {post.countries.map((country) => (
                  <span class="inline-block px-4 py-1 bg-gray-100 dark:bg-gray-900 dark:text-white">
                    {country.name}
                  </span>
                ))}
              </Text>
            )
          }
          <Heading as="h1" size="h1" class:list="mb-4">
            {post.title}
          </Heading>
          {
            post?.excerpt && (
              <Text size="lg" class:list="mb-8">
                {post.excerpt}
              </Text>
            )
          }
          <Text display="muted" size="sm">
            Posted on <DateTime date={post.publishedAt} />
          </Text>
        </div>
      </div>
      <div class="container max-w-screen-2xl">
        {
          post?.mainImage && (
            <figure>
              <SanityPicture
                src={post.mainImage}
                imageUrlBuilder={imageBuilder}
                sizes="(max-width: 1535px) 90vw, 1344px"
                img={{
                  alt: post.mainImage.asset.alt || post.title || '',
                }}
                loading="eager"
              />
              {post.mainImage?.alt && (
                <figcaption class="sr-only">{post.mainImage.alt}</figcaption>
              )}
            </figure>
          )
        }
      </div>
    </section>

    <PortableText value={post.content} />
  </article>
</BaseLayout>
