---
import { BaseLayout } from '../../layouts';
import {
  DateTime,
  Heading,
  PortableText,
  SanityImage,
  Text,
} from '../../components';
import { getPosts } from '../../sanity/queries';

export async function getStaticPaths() {
  const posts = await getPosts();
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

export type Props = Article;

const post = Astro.props;
---

<BaseLayout>
  <article>
    <section class="mb-8 mb:mb-12 lg:mb-16">
      <div class="container">
        <div class="max-w-prose mx-auto text-center py-8 mb:py-12 lg:py-16">
          {
            (post?.imageCount || post?.readingTime) && (
              <Text display="muted" size="sm" class:list="mb-2 lg:mb-4">
                {[
                  post?.readingTime && `${post.readingTime} minute read`,
                  post?.imageCount &&
                    `${post.imageCount} image${post.imageCount > 1 ? 's' : ''}`,
                ]
                  .filter(Boolean)
                  .join(' and ')}
              </Text>
            )
          }
          <Heading as="h1" size="h1" class:list="mb-4">
            {post.title}
          </Heading>
          {
            post?.excerpt && (
              <Text size="lg" class:list="mb-8">
                {post.excerpt}
              </Text>
            )
          }
          <Text display="muted" size="sm">
            Posted on <DateTime date={post.publishedAt} />
          </Text>
        </div>
      </div>
      <div class="container max-w-screen-2xl">
        {
          post.mainImage && (
            <figure transition:name={`article_image_${post._id}`}>
              <SanityImage
                image={post.mainImage}
                width="1280"
                transition:name={`article_cover_${post._id}`}
              />
              {post.mainImage?.alt && (
                <figcaption class="sr-only">{post.mainImage.alt}</figcaption>
              )}
            </figure>
          )
        }
      </div>
    </section>

    <PortableText value={post.content} />
  </article>
</BaseLayout>
