---
import SanityPicture from 'astro-sanity-picture';
import Section from '../Section.astro';
import { imageBuilder } from '~/sanity/image';

const { images } = Astro.props.node;

const containerMaxWidth = 1344;

const w = (n: number) => `${containerMaxWidth / n}px`;

const sizes = [
  `(max-width: 767px): calc(100vw - 2rem), ${w(1)}px`, // one image
  `(max-width: 767px): calc(100vw - 2rem), (max-width: 1535px) calc(50vw - 5rem), ${w(
    2,
  )}`, // two images
  `(max-width: 767px): calc(100vw - 2rem), (max-width: 1535px) calc(33vw - 6rem), ${w(
    3,
  )}`, // three images
  `(max-width: 767px): calc(100vw - 2rem), (max-width: 1535px) calc(25vw - 7rem), ${w(
    4,
  )}`, // four images
  `(max-width: 767px): calc(100vw - 2rem), (max-width: 1535px) calc(20vw - 8rem), ${w(
    5,
  )}`, // five images
];

const imageSizes = sizes?.[images.length] || sizes[5];
---

<Section width="lg" data-block="inline-images">
  <div
    class="grid grid-cols-1 md:grid-cols-dynamic items-center justify-center gap-4"
    style={`--column-count: ${images.length};`}
  >
    {
      images.map(({ caption, image }) => (
        <div class="fade-in-up">
          <SanityPicture
            src={image}
            imageUrlBuilder={imageBuilder}
            style={{
              maxHeight: '95vh',
              objectFit: 'cover',
              width: '100%',
            }}
            sizes={imageSizes}
            img={{
              alt: image.asset.alt || caption || '',
            }}
          />
        </div>
      ))
    }
  </div>
</Section>
